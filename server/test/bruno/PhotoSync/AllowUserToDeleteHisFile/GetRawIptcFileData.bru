meta {
  name: GetRawIptcFileData
  type: http
  seq: 8
}

get {
  url: {{HOST}}/file_data?offset=0&count=10
  body: none
  auth: inherit
}

params:query {
  offset: 0
  count: 10
}

headers {
  Authorization: {{TOKEN}}
}

assert {
  res.status: eq 200
}

tests {
  const rawJpgBase64 = bru.getCollectionVar("RAW_JPG_BASE64")
  const iptcJpgBase64 = bru.getCollectionVar("IPTC_JPG_BASE64")
  test("should return proper file data", function(){
    expect(res.getBody()).to.eql([
      {
        creation_date : "2025.08.11 15:40:00",
        filename : "raw.jpg",
        id: "1",
        mime_type: "image/jpeg",
        size: "2439",
        thumbnail: rawJpgBase64,
      },
      {
        creation_date : "2022.03.01 21:37:00",
        filename : "iptc.jpg",
        id: "3",
        mime_type: "image/jpeg",
        size: "3240",
        thumbnail: iptcJpgBase64,
      },
    ])
  })
}

settings {
  encodeUrl: true
}
