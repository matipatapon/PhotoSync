meta {
  name: GetSubsetOfFileData
  type: http
  seq: 9
}

get {
  url: {{HOST}}/file_data?offset=1&count=2
  body: none
  auth: inherit
}

params:query {
  offset: 1
  count: 2
}

headers {
  Authorization: {{TOKEN}}
}

assert {
  res.status: eq 200
  res.headers["access-control-allow-origin"]: eq {{ALLOWED_ORIGIN}}
}

tests {
  const exifJpgBase64 = bru.getCollectionVar("EXIF_JPG_BASE64")
  const iptcJpgBase64 = bru.getCollectionVar("IPTC_JPG_BASE64")
  test("should return proper file data", function(){
    expect(res.getBody()).to.eql(
    [
      {
        creation_date : "2023.06.07 12:30:45",
        filename : "exif.jpg",
        id: "2",
        mime_type: "image/jpeg",
        size: "3474",
        thumbnail: exifJpgBase64,
      },
      {
        creation_date : "2022.03.01 21:37:00",
        filename : "iptc.jpg",
        id: "1",
        mime_type: "image/jpeg",
        size: "3240",
        thumbnail: iptcJpgBase64,
      },
    ]
    )
  })
}

settings {
  encodeUrl: true
}
